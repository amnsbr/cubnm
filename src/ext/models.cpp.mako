/* 
    Autogenerated based on '${template_path}' 
    and list of available models.
    Do not modify this autogenerated code. Instead modify template.
*/
% for model in models:
#include "./models/${model.lower()}.cpp"
% endfor

const std::vector<std::string> MODELS = {
% for model in models:
    "${model}",
% endfor
};

std::map<std::string, std::function<BaseModel*(int, int, int, double, int, int, bool, int, double, double)>> model_factory = {
% for model in models:
    {"${model}", [](int nodes, int N_SIMS, int N_SCs, double BOLD_TR, int states_sampling, 
                    int time_steps, bool do_delay, int sim_seed, double dt, double bw_dt) {
        return new ${model}Model(nodes, N_SIMS, N_SCs, BOLD_TR, states_sampling, time_steps, do_delay, sim_seed, dt, bw_dt);
    }},
% endfor
};