/* 
    Autogenerated based on '${template_path}' 
    and list of available models.
    Do not modify this autogenerated code. Instead modify template.
*/
% for model in models:
#include "cubnm/models/${model.lower()}.cuh"
% endfor

const std::vector<std::string> MODELS = {
% for model in models:
    "${model}",
% endfor
};

// Helper function to copy constants to device
template<typename Model>
void copy_constants_to_device() {
% for model in models:
    if (strcmp(Model::name, "${model}") == 0) {
        CUDA_CHECK_RETURN(cudaMemcpyToSymbol(d_${model}c, &Model::mc, sizeof(typename Model::Constants)));
        return;
    }
% endfor
}